name: Tests
on: [push]
jobs:
  test:
    name: Run Test Code
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: look inside .env.local before decrypting
        run: cat .env.local
      - name: Unlock secrets
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: look inside .env.local after decrypting
        run: cat .env.local
      - name: look at files inside repository
        run: ls -la
      - name: look at permissions of .git/git-crypt/keys/default
        run: ls -la .git/git-crypt/keys/default
      - name: investigate the user
        run: whoami
      - name: switch to root user
        run: su root
      - name: give execute permissions to .git/git-crypt/keys/default
        run: chmod 755 .git/git-crypt/keys/default
      # - name: generate .env
      #   run: |
      #     # DB
      #     echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" >> .env.local
      #     echo "MYSQL_USER=$MYSQL_USER" >> .env.local
      #     echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> .env.local
      #     echo "MYSQL_DATABASE=$MYSQL_DATABASE" >> .env.local
      #     # Django
      #     echo "SECRET_KEY=$SECRET_KEY" >> .env.local
      #     echo "DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS" >> .env.local
      #     echo "DEBUG=$DEBUG" >> .env.local
      #     echo "TRUSTED_ORIGINS=$TRUSTED_ORIGINS" >> .env.local
      #   env:
      #     MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      #     MYSQL_USER: ${{ secrets.MYSQL_USER }}
      #     MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      #     MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
      #     DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      #     DEBUG: ${{ secrets.DEBUG }}
      #     TRUSTED_ORIGINS: ${{ secrets.TRUSTED_ORIGINS }}
      - name: Test
        run:
          docker-compose run --rm app sh -c "python manage.py test"
