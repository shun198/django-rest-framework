name: Tests
on: [push, pull_request]
jobs:
  test:
    name: Run Test Code
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: generate .env
        run: |
          # DB
          echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" >> .env
          echo "MYSQL_USER=$MYSQL_USER" >> .env
          echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> .env
          echo "MYSQL_DATABASE=$MYSQL_DATABASE" >> .env
          echo "MYSQL_HOST=$MYSQL_HOST" >> .env
          echo "MYSQL_PORT=$MYSQL_PORT" >> .env

          # Django
          echo "SECRET_KEY=$SECRET_KEY" >> .env
          echo "DJANGO_ALLOWED_HOSTS=$DJANGO_ALLOWED_HOSTS" >> .env
          echo "DEBUG=$DEBUG" >> .env
          echo "TRUSTED_ORIGINS=$TRUSTED_ORIGINS" >> .env
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
          DEBUG: ${{ secrets.DEBUG }}
      - name: Test
        run: |
          docker-compose up -d --build
          docker-compose exec -T poetry run pytest --suppress-no-test-exit-code --cov --cov-branch --cov-report=term-missing --junitxml=pytest.xml test | tee pytest-coverage.txt
